{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amrah\\\\IdeaProjects\\\\Appointment booking API project\\\\majorproject-5-wed-16-30-5\\\\demo-react-frontend\\\\src\\\\components\\\\Pages\\\\Login\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Form, Container, Row } from \"react-bootstrap\";\nimport { FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport urlAddress from \"../../ip.json\";\nconst url = \"http://\" + urlAddress.ip + \":8080/api/\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      account: \"\"\n    };\n  }\n\n  handleClick(event) {\n    console.log(this.state);\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        'Accept': \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      })\n    };\n\n    if (this.state.account === \"\") {\n      alert(\"Please Select Account Type\");\n    } else if (this.state.account === \"customer\") {\n      fetch(url + \"users/login\", requestOptions).then(response => {\n        if (response.status === 200) {\n          response.json().then(data => {\n            //console.log(data.token);\n            window.sessionStorage.setItem(\"token\", data.token);\n            window.sessionStorage.setItem(\"loggedIn\", true);\n            window.sessionStorage.setItem(\"email\", this.state.username);\n\n            const Cryptr = require(\"cryptr\");\n\n            const cryptr = new Cryptr(\"keyword\");\n            const encryptedString = cryptr.encrypt(this.state.password);\n            window.sessionStorage.setItem(\"encrypted\", encryptedString);\n            this.props.history.push(\"/UserAppo\");\n            window.location.reload(true); //return <Redirect to='/UserAppo' />\n          });\n        } else {\n          alert(\"Invalid Username or Password\");\n        }\n      }).catch(error => {\n        alert(\"Error contacting server\");\n      });\n    } else if (this.state.account === \"business\") {\n      fetch(url + \"businessOwners/login\", requestOptions).then(response => {\n        //console.log(response.status);\n        if (response.status === 200) {\n          response.json().then(data => {\n            console.log(\"data: \" + data.token);\n            window.sessionStorage.setItem(\"token\", data.token);\n            window.sessionStorage.setItem(\"loggedIn\", true);\n            this.props.history.push(\"/dashboardOwner\");\n            window.location.reload(true);\n          });\n        } else {\n          alert(\"Invalid Username or Password\");\n        }\n      }).catch(error => {\n        alert(\"Error contacting server\");\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      className: \"txtb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      onChange: event => this.setState({\n        username: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      className: \"txtb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: event => this.setState({\n        password: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"acc-type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \"Account:\"), /*#__PURE__*/React.createElement(Form.Check, {\n      className: \"acc-type\",\n      type: \"radio\",\n      label: \"Customer\",\n      name: \"accountType\",\n      value: \"customer\",\n      onChange: event => this.setState({\n        account: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      className: \"acc-type\",\n      type: \"radio\",\n      label: \"Business\",\n      name: \"accountType\",\n      value: \"business\",\n      onChange: event => this.setState({\n        account: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: event => this.handleClick(event),\n      className: \"logbtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"bottom-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, \"Don't have account?\", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/register\",\n      style: {\n        textDecoration: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, \" \", \"Sign up\", \" \"))))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Amrah/IdeaProjects/Appointment booking API project/majorproject-5-wed-16-30-5/demo-react-frontend/src/components/Pages/Login/Login.js"],"names":["React","Component","Redirect","Button","Form","Container","Row","FormGroup","FormControl","FormLabel","urlAddress","url","ip","Login","constructor","props","state","username","password","account","handleClick","event","console","log","requestOptions","method","headers","body","JSON","stringify","alert","fetch","then","response","status","json","data","window","sessionStorage","setItem","token","Cryptr","require","cryptr","encryptedString","encrypt","history","push","location","reload","catch","error","render","setState","target","value","textDecoration"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,GAAlC,QAA6C,iBAA7C;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,QAAkD,iBAAlD;AACA,OAAO,aAAP;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,GAAG,GAAG,YAAYD,UAAU,CAACE,EAAvB,GAA4B,YAAxC;;AAEA,MAAMC,KAAN,SAAoBZ,SAApB,CAA8B;AAC5Ba,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AACA,UAAMQ,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAFY;AAMrBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBZ,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QADF;AAEnBC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFF,OAAf;AANe,KAAvB;;AAYA,QAAI,KAAKF,KAAL,CAAWG,OAAX,KAAuB,EAA3B,EAA+B;AAC7BW,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACD,KAFD,MAEO,IAAI,KAAKd,KAAL,CAAWG,OAAX,KAAuB,UAA3B,EAAuC;AAC5CY,MAAAA,KAAK,CAACpB,GAAG,GAAG,aAAP,EAAsBa,cAAtB,CAAL,CACGQ,IADH,CACSC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BD,UAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAsBI,IAAD,IAAU;AAC7B;AACAC,YAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,OAA9B,EAAuCH,IAAI,CAACI,KAA5C;AACAH,YAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,UAA9B,EAA0C,IAA1C;AACAF,YAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,OAA9B,EAAuC,KAAKvB,KAAL,CAAWC,QAAlD;;AAEA,kBAAMwB,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,kBAAMC,MAAM,GAAG,IAAIF,MAAJ,CAAW,SAAX,CAAf;AAEA,kBAAMG,eAAe,GAAGD,MAAM,CAACE,OAAP,CAAe,KAAK7B,KAAL,CAAWE,QAA1B,CAAxB;AACAmB,YAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,WAA9B,EAA2CK,eAA3C;AAEA,iBAAK7B,KAAL,CAAW+B,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AACAV,YAAAA,MAAM,CAACW,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB,EAb6B,CAc7B;AACD,WAfD;AAgBD,SAjBD,MAiBO;AACLnB,UAAAA,KAAK,CAAC,8BAAD,CAAL;AACD;AACF,OAtBH,EAuBGoB,KAvBH,CAuBUC,KAAD,IAAW;AAChBrB,QAAAA,KAAK,CAAC,yBAAD,CAAL;AACD,OAzBH;AA0BD,KA3BM,MA2BA,IAAI,KAAKd,KAAL,CAAWG,OAAX,KAAuB,UAA3B,EAAuC;AAC5CY,MAAAA,KAAK,CAACpB,GAAG,GAAG,sBAAP,EAA+Ba,cAA/B,CAAL,CACGQ,IADH,CACSC,QAAD,IAAc;AAClB;AACA,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBD,UAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAsBI,IAAD,IAAU;AAC/Bd,YAAAA,OAAO,CAACC,GAAR,CAAY,WAASa,IAAI,CAACI,KAA1B;AACAH,YAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,OAA9B,EAAuCH,IAAI,CAACI,KAA5C;AACAH,YAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,UAA9B,EAA0C,IAA1C;AACA,iBAAKxB,KAAL,CAAW+B,OAAX,CAAmBC,IAAnB,CAAwB,iBAAxB;AACAV,YAAAA,MAAM,CAACW,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACD,WANC;AAOH,SARD,MAQO;AACLnB,UAAAA,KAAK,CAAC,8BAAD,CAAL;AACD;AACF,OAdH,EAeGoB,KAfH,CAeUC,KAAD,IAAW;AAChBrB,QAAAA,KAAK,CAAC,yBAAD,CAAL;AACD,OAjBH;AAkBD;AACF;;AAEDsB,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAGE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAuC,MAAA,SAAS,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,WAAW,EAAC,aAFd;AAGE,MAAA,QAAQ,EAAG/B,KAAD,IACR,KAAKgC,QAAL,CAAc;AAAEpC,QAAAA,QAAQ,EAAEI,KAAK,CAACiC,MAAN,CAAaC;AAAzB,OAAd,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAHF,eAcE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAA0C,MAAA,SAAS,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,WAAW,EAAC,UAFd;AAGE,MAAA,QAAQ,EAAGlC,KAAD,IACR,KAAKgC,QAAL,CAAc;AAAEnC,QAAAA,QAAQ,EAAEG,KAAK,CAACiC,MAAN,CAAaC;AAAzB,OAAd,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAdF,eAwBE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,IAAI,EAAC,aAJP;AAKE,MAAA,KAAK,EAAC,UALR;AAME,MAAA,QAAQ,EAAGlC,KAAD,IACR,KAAKgC,QAAL,CAAc;AAAElC,QAAAA,OAAO,EAAEE,KAAK,CAACiC,MAAN,CAAaC;AAAxB,OAAd,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAYE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,IAAI,EAAC,aAJP;AAKE,MAAA,KAAK,EAAC,UALR;AAME,MAAA,QAAQ,EAAGlC,KAAD,IACR,KAAKgC,QAAL,CAAc;AAAElC,QAAAA,OAAO,EAAEE,KAAK,CAACiC,MAAN,CAAaC;AAAxB,OAAd,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF,CAxBF,eAkDE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,SADV;AAEE,MAAA,OAAO,EAAGlC,KAAD,IAAW,KAAKD,WAAL,CAAiBC,KAAjB,CAFtB;AAGE,MAAA,SAAS,EAAC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAQE;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEE;AAAG,MAAA,IAAI,EAAC,WAAR;AAAoB,MAAA,KAAK,EAAE;AAAEmC,QAAAA,cAAc,EAAE;AAAlB,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,aAEU,GAFV,CAFF,CARF,CAlDF,CADF,CADF,CADF;AAyED;;AAtJ2B;;AAyJ9B,eAAe3C,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Button, Form, Container, Row } from \"react-bootstrap\";\r\nimport { FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\r\nimport \"./Login.css\";\r\nimport urlAddress from \"../../ip.json\";\r\n\r\nconst url = \"http://\" + urlAddress.ip + \":8080/api/\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      account: \"\",\r\n    };\r\n  }\r\n\r\n  handleClick(event) {\r\n    console.log(this.state);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Accept': \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: this.state.username,\r\n        password: this.state.password,\r\n      }),\r\n    };\r\n\r\n    if (this.state.account === \"\") {\r\n      alert(\"Please Select Account Type\");\r\n    } else if (this.state.account === \"customer\") {\r\n      fetch(url + \"users/login\", requestOptions)\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            response.json().then((data) => {\r\n              //console.log(data.token);\r\n              window.sessionStorage.setItem(\"token\", data.token);\r\n              window.sessionStorage.setItem(\"loggedIn\", true);\r\n              window.sessionStorage.setItem(\"email\", this.state.username);\r\n\r\n              const Cryptr = require(\"cryptr\");\r\n              const cryptr = new Cryptr(\"keyword\");\r\n\r\n              const encryptedString = cryptr.encrypt(this.state.password);\r\n              window.sessionStorage.setItem(\"encrypted\", encryptedString);\r\n\r\n              this.props.history.push(\"/UserAppo\");\r\n              window.location.reload(true);\r\n              //return <Redirect to='/UserAppo' />\r\n            });\r\n          } else {\r\n            alert(\"Invalid Username or Password\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          alert(\"Error contacting server\");\r\n        });\r\n    } else if (this.state.account === \"business\") {\r\n      fetch(url + \"businessOwners/login\", requestOptions)\r\n        .then((response) => {\r\n          //console.log(response.status);\r\n          if (response.status === 200) {\r\n              response.json().then((data) => {\r\n              console.log(\"data: \"+data.token);\r\n              window.sessionStorage.setItem(\"token\", data.token);\r\n              window.sessionStorage.setItem(\"loggedIn\", true);\r\n              this.props.history.push(\"/dashboardOwner\");\r\n              window.location.reload(true);\r\n            });\r\n          } else {\r\n            alert(\"Invalid Username or Password\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          alert(\"Error contacting server\");\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div>\r\n          <Form className=\"login-form\">\r\n            <h1>Login</h1>\r\n\r\n            <Form.Group controlId=\"formBasicEmail\" className=\"txtb\">\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                onChange={(event) =>\r\n                  this.setState({ username: event.target.value })\r\n                }\r\n              />\r\n              <Form.Text className=\"text-muted\"></Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\" className=\"txtb\">\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={(event) =>\r\n                  this.setState({ password: event.target.value })\r\n                }\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Row className=\"acc-type\">\r\n                <Form.Label>Account:</Form.Label>\r\n                <Form.Check\r\n                  className=\"acc-type\"\r\n                  type=\"radio\"\r\n                  label=\"Customer\"\r\n                  name=\"accountType\"\r\n                  value=\"customer\"\r\n                  onChange={(event) =>\r\n                    this.setState({ account: event.target.value })\r\n                  }\r\n                />\r\n                <Form.Check\r\n                  className=\"acc-type\"\r\n                  type=\"radio\"\r\n                  label=\"Business\"\r\n                  name=\"accountType\"\r\n                  value=\"business\"\r\n                  onChange={(event) =>\r\n                    this.setState({ account: event.target.value })\r\n                  }\r\n                />\r\n              </Row>\r\n            </Form.Group>\r\n\r\n            <Row>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={(event) => this.handleClick(event)}\r\n                className=\"logbtn\"\r\n              >\r\n                Login\r\n              </Button>\r\n              <div class=\"bottom-text\">\r\n                Don't have account?\r\n                <a href=\"/register\" style={{ textDecoration: \"none\" }}>\r\n                  {\" \"}\r\n                  Sign up{\" \"}\r\n                </a>\r\n              </div>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}