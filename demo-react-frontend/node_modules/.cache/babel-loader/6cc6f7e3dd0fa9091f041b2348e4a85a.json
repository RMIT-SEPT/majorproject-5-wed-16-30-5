{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amrah\\\\IdeaProjects\\\\Appointment booking API project\\\\majorproject-5-wed-16-30-5\\\\demo-react-frontend\\\\src\\\\components\\\\Pages\\\\Business-Owner\\\\EditService.js\";\nimport React, { Component } from 'react';\nimport './Appointments.css';\nimport { Button, Container } from \"react-bootstrap\";\nimport * as BsIcons from 'react-icons/bs';\nimport Sidebar from '../../Layout/Sidebar/Sidebar';\nimport urlAddress from '../../ip.json';\nconst url = 'http://' + urlAddress.ip + ':8080/api/service';\n\nclass EditService extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeNameHandler = event => {\n      this.setState({\n        serviceName: event.target.value\n      });\n    };\n\n    this.changeDesHandler = event => {\n      this.setState({\n        serviceDescription: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n    };\n\n    this.state = {\n      serviceIdentifier: this.props.match.params.id,\n      id: '',\n      serviceName: '',\n      serviceDescription: ''\n    };\n    this.SaveData = this.SaveData.bind(this);\n    this.changeNameHandler = this.changeNameHandler.bind(this);\n    this.changeDesHandler = this.changeDesHandler.bind(this);\n  }\n\n  fetchData() {\n    let h = new Headers();\n    let email = window.sessionStorage.getItem('email');\n\n    const Cryptr = require('cryptr');\n\n    const cryptr = new Cryptr('keyword');\n    let encryptedString = window.sessionStorage.getItem('encrypted');\n    const decryptedString = cryptr.decrypt(encryptedString);\n    console.log(decryptedString);\n    let encoded = window.btoa(email + ':' + decryptedString);\n    let auth = 'Basic ' + encoded;\n    h.append('Accept', 'application/json');\n    h.append('Authorization', auth);\n    fetch(url + '/' + this.state.serviceIdentifier, {\n      method: 'GET',\n      headers: h\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        id: json.id,\n        serviceIdentifier: json.serviceIdentifier,\n        serviceName: json.serviceName,\n        serviceDescription: json.serviceDescription\n      });\n    });\n  }\n\n  SaveData() {\n    let h = new Headers();\n    let email = window.sessionStorage.getItem('email');\n\n    const Cryptr = require('cryptr');\n\n    const cryptr = new Cryptr('keyword');\n    let encryptedString = window.sessionStorage.getItem('encrypted');\n    const decryptedString = cryptr.decrypt(encryptedString);\n    console.log(decryptedString);\n    let encoded = window.btoa(email + ':' + decryptedString);\n    let auth = 'Basic ' + encoded;\n    h.append('Content-Type', 'application/json');\n    h.append('Accept', 'application/json');\n    h.append('Authorization', auth);\n    fetch(url + '/', {\n      method: 'post',\n      headers: h,\n      body: JSON.stringify({\n        id: this.state.id,\n        serviceIdentifier: this.state.serviceIdentifier,\n        serviceName: this.state.serviceName,\n        serviceDescription: this.state.serviceDescription\n      })\n    }).then(json => this.fetchData()).then(console.log(this.state));\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      style: {\n        padding: '0rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '25%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BsIcons.BsCardChecklist, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }), \" Service Id: \", this.state.serviceIdentifier), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, \" Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      name: \"serviceName\",\n      className: \"form-control\",\n      value: this.state.serviceName,\n      onChange: this.changeNameHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, \" Description: \"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Description\",\n      name: \"Description\",\n      className: \"form-control\",\n      value: this.state.serviceDescription,\n      onChange: this.changeDesHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-success\",\n      onClick: this.SaveData.bind(this, this.state.id),\n      href: \"/BusinessServices\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, \"Save\"))));\n  }\n\n}\n\nexport default EditService;","map":{"version":3,"sources":["C:/Users/Amrah/IdeaProjects/Appointment booking API project/majorproject-5-wed-16-30-5/demo-react-frontend/src/components/Pages/Business-Owner/EditService.js"],"names":["React","Component","Button","Container","BsIcons","Sidebar","urlAddress","url","ip","EditService","constructor","props","changeNameHandler","event","setState","serviceName","target","value","changeDesHandler","serviceDescription","handleSubmit","preventDefault","state","serviceIdentifier","match","params","id","SaveData","bind","fetchData","h","Headers","email","window","sessionStorage","getItem","Cryptr","require","cryptr","encryptedString","decryptedString","decrypt","console","log","encoded","btoa","auth","append","fetch","method","headers","then","res","json","body","JSON","stringify","componentDidMount","render","padding","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,iBAAlC;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,GAAG,GAAG,YAAYD,UAAU,CAACE,EAAvB,GAA4B,mBAAxC;;AAEA,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAChCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA4CnBC,iBA5CmB,GA4CEC,KAAD,IAAW;AAC3B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;AACH,KA9CkB;;AAAA,SA+CnBC,gBA/CmB,GA+CCL,KAAD,IAAW;AAC1B,WAAKC,QAAL,CAAc;AAAEK,QAAAA,kBAAkB,EAAEN,KAAK,CAACG,MAAN,CAAaC;AAAnC,OAAd;AACH,KAjDkB;;AAAA,SAkDnBG,YAlDmB,GAkDJP,KAAK,IAAI;AACpBA,MAAAA,KAAK,CAACQ,cAAN;AACH,KApDkB;;AAGf,SAAKC,KAAL,GAAa;AACTC,MAAAA,iBAAiB,EAAE,KAAKZ,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBC,EADlC;AAETA,MAAAA,EAAE,EAAE,EAFK;AAGTX,MAAAA,WAAW,EAAE,EAHJ;AAITI,MAAAA,kBAAkB,EAAE;AAJX,KAAb;AAMA,SAAKQ,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKhB,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBgB,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKV,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBU,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAEDC,EAAAA,SAAS,GAAG;AAER,QAAIC,CAAC,GAAG,IAAIC,OAAJ,EAAR;AAEA,QAAIC,KAAK,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,OAA9B,CAAZ;;AACA,UAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,UAAMC,MAAM,GAAG,IAAIF,MAAJ,CAAW,SAAX,CAAf;AACA,QAAIG,eAAe,GAAGN,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,WAA9B,CAAtB;AACA,UAAMK,eAAe,GAAGF,MAAM,CAACG,OAAP,CAAeF,eAAf,CAAxB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ;AACA,QAAII,OAAO,GAAGX,MAAM,CAACY,IAAP,CAAYb,KAAK,GAAG,GAAR,GAAcQ,eAA1B,CAAd;AACA,QAAIM,IAAI,GAAG,WAAWF,OAAtB;AACAd,IAAAA,CAAC,CAACiB,MAAF,CAAS,QAAT,EAAmB,kBAAnB;AACAjB,IAAAA,CAAC,CAACiB,MAAF,CAAS,eAAT,EAA0BD,IAA1B;AAEAE,IAAAA,KAAK,CAACzC,GAAG,GAAG,GAAN,GAAY,KAAKe,KAAL,CAAWC,iBAAxB,EAA2C;AAC5C0B,MAAAA,MAAM,EAAE,KADoC;AAE5CC,MAAAA,OAAO,EAAEpB;AAFmC,KAA3C,CAAL,CAIKqB,IAJL,CAIUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJjB,EAKKF,IALL,CAKUE,IAAI,IAAI;AACV,WAAKvC,QAAL,CAAc;AACVY,QAAAA,EAAE,EAAE2B,IAAI,CAAC3B,EADC;AAEVH,QAAAA,iBAAiB,EAAE8B,IAAI,CAAC9B,iBAFd;AAGVR,QAAAA,WAAW,EAAEsC,IAAI,CAACtC,WAHR;AAIVI,QAAAA,kBAAkB,EAAEkC,IAAI,CAAClC;AAJf,OAAd;AAOH,KAbL;AAcH;;AAUDQ,EAAAA,QAAQ,GAAG;AACP,QAAIG,CAAC,GAAG,IAAIC,OAAJ,EAAR;AACA,QAAIC,KAAK,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,OAA9B,CAAZ;;AACA,UAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,UAAMC,MAAM,GAAG,IAAIF,MAAJ,CAAW,SAAX,CAAf;AACA,QAAIG,eAAe,GAAGN,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,WAA9B,CAAtB;AACA,UAAMK,eAAe,GAAGF,MAAM,CAACG,OAAP,CAAeF,eAAf,CAAxB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ;AACA,QAAII,OAAO,GAAGX,MAAM,CAACY,IAAP,CAAYb,KAAK,GAAG,GAAR,GAAcQ,eAA1B,CAAd;AACA,QAAIM,IAAI,GAAG,WAAWF,OAAtB;AACAd,IAAAA,CAAC,CAACiB,MAAF,CAAS,cAAT,EAAyB,kBAAzB;AACAjB,IAAAA,CAAC,CAACiB,MAAF,CAAS,QAAT,EAAmB,kBAAnB;AACAjB,IAAAA,CAAC,CAACiB,MAAF,CAAS,eAAT,EAA0BD,IAA1B;AAEAE,IAAAA,KAAK,CAACzC,GAAG,GAAG,GAAP,EAAY;AACb0C,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAEpB,CAFI;AAGbwB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB9B,QAAAA,EAAE,EAAE,KAAKJ,KAAL,CAAWI,EADE;AAEjBH,QAAAA,iBAAiB,EAAE,KAAKD,KAAL,CAAWC,iBAFb;AAGjBR,QAAAA,WAAW,EAAE,KAAKO,KAAL,CAAWP,WAHP;AAIjBI,QAAAA,kBAAkB,EAAE,KAAKG,KAAL,CAAWH;AAJd,OAAf;AAHO,KAAZ,CAAL,CASGgC,IATH,CASQE,IAAI,IAAI,KAAKxB,SAAL,EAThB,EASkCsB,IATlC,CASuCT,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAjB,CATvC;AAUH;;AACDmC,EAAAA,iBAAiB,GAAG;AAChB,SAAK5B,SAAL;AACH;;AAED6B,EAAAA,MAAM,GAAG;AAEL,wBACI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI,oBAAC,OAAD,CAAS,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,mBAA6C,KAAKtC,KAAL,CAAWC,iBAAxD,CADJ,eAEI;AAAM,MAAA,QAAQ,EAAE,KAAKH,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,MAA/B;AAAsC,MAAA,IAAI,EAAC,aAA3C;AAAyD,MAAA,SAAS,EAAC,cAAnE;AACI,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWP,WADtB;AACmC,MAAA,QAAQ,EAAE,KAAKH,iBADlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAMI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,MAAA,WAAW,EAAC,aAAnB;AAAiC,MAAA,IAAI,EAAC,aAAtC;AAAoD,MAAA,SAAS,EAAC,cAA9D;AACI,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWH,kBADtB;AAEI,MAAA,QAAQ,EAAE,KAAKD,gBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CANJ,eAYI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,iBADd;AAEI,MAAA,OAAO,EAAE,KAAKS,QAAL,CAAcC,IAAd,CAAmB,IAAnB,EAAyB,KAAKN,KAAL,CAAWI,EAApC,CAFb;AAGI,MAAA,IAAI,EAAC,mBAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,CAFJ,CAFJ,CADJ;AA0BH;;AA/G+B;;AAkHpC,eAAejB,WAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport './Appointments.css';\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport * as BsIcons from 'react-icons/bs';\r\nimport Sidebar from '../../Layout/Sidebar/Sidebar';\r\nimport urlAddress from '../../ip.json';\r\n\r\nconst url = 'http://' + urlAddress.ip + ':8080/api/service';\r\n\r\nclass EditService extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            serviceIdentifier: this.props.match.params.id,\r\n            id: '',\r\n            serviceName: '',\r\n            serviceDescription: ''\r\n        }\r\n        this.SaveData = this.SaveData.bind(this);\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeDesHandler = this.changeDesHandler.bind(this);\r\n    }\r\n\r\n    fetchData() {\r\n\r\n        let h = new Headers();\r\n\r\n        let email = window.sessionStorage.getItem('email');\r\n        const Cryptr = require('cryptr');\r\n        const cryptr = new Cryptr('keyword');\r\n        let encryptedString = window.sessionStorage.getItem('encrypted');\r\n        const decryptedString = cryptr.decrypt(encryptedString);\r\n        console.log(decryptedString);\r\n        let encoded = window.btoa(email + ':' + decryptedString);\r\n        let auth = 'Basic ' + encoded;\r\n        h.append('Accept', 'application/json');\r\n        h.append('Authorization', auth);\r\n\r\n        fetch(url + '/' + this.state.serviceIdentifier, {\r\n            method: 'GET',\r\n            headers: h\r\n        })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                this.setState({\r\n                    id: json.id,\r\n                    serviceIdentifier: json.serviceIdentifier,\r\n                    serviceName: json.serviceName,\r\n                    serviceDescription: json.serviceDescription\r\n                });\r\n\r\n            });\r\n    }\r\n    changeNameHandler = (event) => {\r\n        this.setState({ serviceName: event.target.value });\r\n    }\r\n    changeDesHandler = (event) => {\r\n        this.setState({ serviceDescription: event.target.value });\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n    }\r\n    SaveData() {\r\n        let h = new Headers();\r\n        let email = window.sessionStorage.getItem('email');\r\n        const Cryptr = require('cryptr');\r\n        const cryptr = new Cryptr('keyword');\r\n        let encryptedString = window.sessionStorage.getItem('encrypted');\r\n        const decryptedString = cryptr.decrypt(encryptedString);\r\n        console.log(decryptedString);\r\n        let encoded = window.btoa(email + ':' + decryptedString);\r\n        let auth = 'Basic ' + encoded;\r\n        h.append('Content-Type', 'application/json');\r\n        h.append('Accept', 'application/json');\r\n        h.append('Authorization', auth);\r\n\r\n        fetch(url + '/', {\r\n            method: 'post',\r\n            headers: h,\r\n            body: JSON.stringify({\r\n                id: this.state.id,\r\n                serviceIdentifier: this.state.serviceIdentifier,\r\n                serviceName: this.state.serviceName,\r\n                serviceDescription: this.state.serviceDescription\r\n            })\r\n        }).then(json => this.fetchData()).then(console.log(this.state))\r\n    }\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Container fluid style={{ padding: '0rem' }}>\r\n                <Sidebar />\r\n                <div style={{ marginLeft: '25%' }}>\r\n                    <h1><BsIcons.BsCardChecklist /> Service Id: {this.state.serviceIdentifier}</h1>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label> Name: </label>\r\n                            <input type=\"text\" placeholder=\"Name\" name=\"serviceName\" className=\"form-control\"\r\n                                value={this.state.serviceName} onChange={this.changeNameHandler} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label> Description: </label>\r\n                            <input placeholder=\"Description\" name=\"Description\" className=\"form-control\"\r\n                                value={this.state.serviceDescription}\r\n                                onChange={this.changeDesHandler} />\r\n                        </div>\r\n                        <Button\r\n                            className=\"btn btn-success\"\r\n                            onClick={this.SaveData.bind(this, this.state.id)}\r\n                            href=\"/BusinessServices\">Save</Button>\r\n                    </form>\r\n\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditService"]},"metadata":{},"sourceType":"module"}