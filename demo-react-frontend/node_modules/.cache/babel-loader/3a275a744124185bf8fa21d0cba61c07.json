{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amrah\\\\IdeaProjects\\\\Appointment booking API project\\\\majorproject-5-wed-16-30-5\\\\demo-react-frontend\\\\src\\\\components\\\\Pages\\\\User\\\\AppoDetails.js\";\nimport React, { Component } from 'react';\nimport './Services.css';\nimport { Button, Container } from \"react-bootstrap\";\nimport * as BsIcons from 'react-icons/bs';\nimport * as IoIcons from 'react-icons/io';\nimport Sidebar from '../../Layout/Sidebar/Sidebar';\nimport Header from '../../Layout/Navbar/Navbar';\nimport urlAddress from '../../ip.json';\nconst url = 'http://' + urlAddress.ip + ':8080/api/appointment';\n\nclass UApt extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeNameHandler = event => {\n      this.setState({\n        appointmentName: event.target.value\n      });\n    };\n\n    this.changeDesHandler = event => {\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.changeDateHandler = event => {\n      this.setState({\n        appointmentDate: event.target.value\n      });\n    };\n\n    this.validate = () => {\n      let nameError = '';\n      let desError = '';\n      let dateError = '';\n\n      if (!this.state.appointmentName) {\n        nameError = \"*This field is empty\";\n      }\n\n      if (!this.state.description) {\n        desError = \"*This field is empty\";\n      }\n\n      if (!this.state.appointmentDate) {\n        dateError = \"*This field is empty\";\n      }\n\n      if (nameError || desError || dateError) {\n        this.setState({\n          nameError,\n          desError,\n          dateError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        console.log(this.state);\n      }\n    };\n\n    this.state = {\n      appointmentIdentifier: this.props.match.params.id,\n      id: '',\n      appointmentName: '',\n      description: '',\n      appointmentDate: '',\n      appointmentOwner: ''\n    };\n    this.SaveData = this.SaveData.bind(this);\n    this.changeNameHandler = this.changeNameHandler.bind(this);\n    this.changeDesHandler = this.changeDesHandler.bind(this);\n    this.changeDateHandler = this.changeDateHandler.bind(this);\n  }\n\n  fetchData() {\n    let h = new Headers();\n    let email = window.sessionStorage.getItem('email');\n\n    const Cryptr = require('cryptr');\n\n    const cryptr = new Cryptr('keyword');\n    let encryptedString = window.sessionStorage.getItem('encrypted');\n    const decryptedString = cryptr.decrypt(encryptedString);\n    console.log(decryptedString);\n    let encoded = window.btoa(email + ':' + decryptedString);\n    let auth = 'Basic ' + encoded;\n    h.append('Accept', 'application/json');\n    h.append('Authorization', auth);\n    Axios.get(url + '/' + this.state.appointmentIdentifier, {\n      headers: h\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        id: json.id,\n        appointmentIdentifier: json.appointmentIdentifier,\n        appointmentName: json.appointmentName,\n        description: json.description,\n        appointmentDate: json.appointmentDate\n      });\n    });\n  }\n\n  SaveData() {\n    let h = new Headers();\n    let email = window.sessionStorage.getItem('email');\n\n    const Cryptr = require('cryptr');\n\n    const cryptr = new Cryptr('keyword');\n    let encryptedString = window.sessionStorage.getItem('encrypted');\n    const decryptedString = cryptr.decrypt(encryptedString);\n    console.log(decryptedString);\n    let encoded = window.btoa(email + ':' + decryptedString);\n    let auth = 'Basic ' + encoded;\n    h.append('Content-Type', 'application/json');\n    h.append('Accept', 'application/json');\n    h.append('Authorization', auth);\n    fetch(url + '/', {\n      method: 'post',\n      headers: h,\n      body: JSON.stringify({\n        id: this.state.id,\n        appointmentIdentifier: this.state.appointmentIdentifier,\n        appointmentDate: this.state.appointmentDate,\n        appointmentName: this.state.appointmentName,\n        description: this.state.description\n      })\n    }).then(json => this.fetchData()).then(console.log(this.state));\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      style: {\n        padding: '0rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '25%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IoIcons.IoIosPaper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }), \" Appointment Id: \", this.state.appointmentIdentifier), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, \" Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      name: \"appointmentName\",\n      className: \"form-control\",\n      value: this.state.appointmentName,\n      onChange: this.changeNameHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, \" Description: \"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Description\",\n      name: \"Description\",\n      className: \"form-control\",\n      value: this.state.description,\n      onChange: this.changeDesHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, \" Date: \"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Date\",\n      name: \"Date\",\n      className: \"form-control\",\n      value: this.state.appointmentDate,\n      onChange: this.changeDateHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-success\",\n      onClick: this.SaveData.bind(this, this.state.id),\n      href: \"/UserAppo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, \"ave\"))));\n  }\n\n}\n\nexport default UApt;","map":{"version":3,"sources":["C:/Users/Amrah/IdeaProjects/Appointment booking API project/majorproject-5-wed-16-30-5/demo-react-frontend/src/components/Pages/User/AppoDetails.js"],"names":["React","Component","Button","Container","BsIcons","IoIcons","Sidebar","Header","urlAddress","url","ip","UApt","constructor","props","changeNameHandler","event","setState","appointmentName","target","value","changeDesHandler","description","changeDateHandler","appointmentDate","validate","nameError","desError","dateError","state","handleSubmit","preventDefault","isValid","console","log","appointmentIdentifier","match","params","id","appointmentOwner","SaveData","bind","fetchData","h","Headers","email","window","sessionStorage","getItem","Cryptr","require","cryptr","encryptedString","decryptedString","decrypt","encoded","btoa","auth","append","Axios","get","headers","then","res","json","fetch","method","body","JSON","stringify","componentDidMount","render","padding","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './Services.css';\r\nimport { Button,Container } from \"react-bootstrap\";\r\nimport * as BsIcons from 'react-icons/bs';\r\nimport * as IoIcons from 'react-icons/io';\r\nimport Sidebar from '../../Layout/Sidebar/Sidebar';\r\nimport Header from '../../Layout/Navbar/Navbar'\r\nimport urlAddress from '../../ip.json';\r\n\r\nconst url = 'http://' + urlAddress.ip + ':8080/api/appointment';\r\n\r\nclass UApt extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            appointmentIdentifier: this.props.match.params.id,\r\n            id:'',\r\n            appointmentName: '',\r\n            description: '',\r\n            appointmentDate: '',\r\n            appointmentOwner: ''\r\n        }\r\n        this.SaveData = this.SaveData.bind(this);\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeDesHandler = this.changeDesHandler.bind(this);\r\n        this.changeDateHandler = this.changeDateHandler.bind(this);\r\n    }\r\n   \r\n    fetchData() {\r\n\r\n        let h = new Headers();\r\n\r\n        let email = window.sessionStorage.getItem('email');\r\n        const Cryptr = require('cryptr');\r\n        const cryptr = new Cryptr('keyword');\r\n        let encryptedString = window.sessionStorage.getItem('encrypted');\r\n        const decryptedString = cryptr.decrypt(encryptedString);\r\n        console.log(decryptedString);\r\n        let encoded = window.btoa(email + ':' + decryptedString);\r\n        let auth = 'Basic ' + encoded;\r\n        h.append('Accept', 'application/json');\r\n        h.append('Authorization', auth);\r\n\r\n        Axios.get(url + '/' + this.state.appointmentIdentifier, {\r\n            headers: h\r\n        })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                this.setState({ \r\n                    id: json.id,\r\n                    appointmentIdentifier: json.appointmentIdentifier,\r\n                    appointmentName: json.appointmentName,\r\n                    description: json.description,\r\n                    appointmentDate: json.appointmentDate\r\n                 });\r\n\r\n            });\r\n    }\r\n    changeNameHandler = (event) => {\r\n        this.setState({ appointmentName: event.target.value });\r\n    }\r\n    changeDesHandler = (event) => {\r\n        this.setState({ description: event.target.value });\r\n    }\r\n    changeDateHandler = (event) => {\r\n        this.setState({ appointmentDate: event.target.value });\r\n    }\r\n    validate = () => {\r\n        let nameError = '';\r\n        let desError = '';\r\n        let dateError = '';\r\n      \r\n\r\n        if (!this.state.appointmentName) {\r\n            nameError = \"*This field is empty\";\r\n        }\r\n        if (!this.state.description) {\r\n            desError = \"*This field is empty\";\r\n        }\r\n        if (!this.state.appointmentDate) {\r\n            dateError = \"*This field is empty\";\r\n        }\r\n        \r\n\r\n        if (nameError || desError || dateError) {\r\n            this.setState({ nameError, desError, dateError });\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            console.log(this.state);\r\n        }\r\n    }\r\n    SaveData(){\r\n        let h = new Headers();\r\n        let email = window.sessionStorage.getItem('email');\r\n        const Cryptr = require('cryptr');\r\n        const cryptr = new Cryptr('keyword');\r\n        let encryptedString = window.sessionStorage.getItem('encrypted');\r\n        const decryptedString = cryptr.decrypt(encryptedString);\r\n        console.log(decryptedString);\r\n        let encoded = window.btoa(email + ':' + decryptedString);\r\n        let auth = 'Basic ' + encoded;\r\n        h.append('Content-Type', 'application/json');\r\n        h.append('Accept', 'application/json');\r\n        h.append('Authorization', auth);\r\n        \r\n        fetch(url + '/', {\r\n            method: 'post',\r\n            headers: h,\r\n            body: JSON.stringify({\r\n                id: this.state.id,\r\n                appointmentIdentifier: this.state.appointmentIdentifier,\r\n                appointmentDate: this.state.appointmentDate,\r\n                appointmentName: this.state.appointmentName,\r\n                description: this.state.description\r\n             })\r\n        }).then(json => this.fetchData()).then(console.log(this.state))\r\n    }\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Container fluid style={{ padding: '0rem' }}>\r\n            <Sidebar/>\r\n            <div style={{ marginLeft: '25%' }}>\r\n                <h1><IoIcons.IoIosPaper /> Appointment Id: {this.state.appointmentIdentifier}</h1>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label> Name: </label>\r\n                            <input type=\"text\" placeholder=\"Name\" name=\"appointmentName\" className=\"form-control\"\r\n                                value={this.state.appointmentName} onChange={this.changeNameHandler} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label> Description: </label>\r\n                            <input placeholder=\"Description\" name=\"Description\" className=\"form-control\"\r\n                                value={this.state.description}\r\n                                onChange={this.changeDesHandler}  />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label> Date: </label>\r\n                            <input placeholder=\"Date\" name=\"Date\" className=\"form-control\"\r\n                                value={this.state.appointmentDate}\r\n                                onChange={this.changeDateHandler} />\r\n                        </div>\r\n                        <Button \r\n                        className=\"btn btn-success\" \r\n                        onClick={this.SaveData.bind(this, this.state.id)}\r\n                        href=\"/UserAppo\">ave</Button>\r\n                    </form>\r\n\r\n            </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UApt"]},"metadata":{},"sourceType":"module"}